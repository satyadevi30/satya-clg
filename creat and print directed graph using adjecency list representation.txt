# creat and print  directed graph using adjecency list representation
#CODE:
def addnode(v):
    if v  in graph:
        print(v ,"is available")
    else:
        graph[v]=[]
def addedge(node1,node2):
    if node1 not in graph:
        print("not present")
    elif node2 not in graph:
        print("not present")
    else:
        graph[node1].append(node2)
def show():
    for x in graph:
        print(x,":",graph[x])
graph={}
while True:
    print()
    print("1.addnode \n 2.addedge \n 3.show \n 4.exit")
    ch=int(input("enter choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter 1st node")
        node2=input("enter 2nd node")
        addedge(node1,node2)
    elif ch==3:
        show()
    else:
        break
OUTPUT:
1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice1
enter nodeA

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice1
enter nodeB

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice1
enter nodeC

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice1
enter nodeD

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice2
enter node1A
enter node2B

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice2
enter node1B
enter node2C

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice2
enter node1C
enter node2D

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice2
enter node1A
enter node2D

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice3
A : ['B', 'D']
B : ['C']
C : ['D']
D : []

1.addnode 
 2.addedge 
 3.show 
 4.exit
enter choice4